package com.digitoll.commons.model;

import io.swagger.annotations.ApiModelProperty;
import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.index.Indexed;
import org.springframework.data.mongodb.core.mapping.Document;

import javax.validation.constraints.NotBlank;
import javax.validation.constraints.NotNull;
import java.util.Date;
import java.util.Objects;

@Document(collection = "roles")
public class Role implements RoleProperties  {
    @Id
    @ApiModelProperty(notes = "Autogenerated ID", example="5d3f11c08b9a8e7a66628772")
    private String id;

    @NotBlank
    @Indexed(unique=true)
    @ApiModelProperty(notes = "Nomenclature for the role", allowableValues = "ROLE_USERS, ROLE_PARTNER_ADMIN, " +
            "ROLE_SUPPORT_1, ROLE_ACCOUNTANT, ROLE_NO_POS")
    private String code;

    @NotBlank
    @ApiModelProperty(notes = "Name of the role", allowableValues = "Users, Partner Admin, " +
            "Support Level 1, Accountant, No posId required")
    private String name;

    @NotNull
    @ApiModelProperty(notes = "The date that the role was created")
    private Date createdAt = new Date();

    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public String getCode() {
        return code;
    }

    public void setCode(String code) {
        this.code = code;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Date getCreatedAt() {
        return createdAt;
    }

    public void setCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        Role role = (Role) o;
        return Objects.equals(id, role.id) &&
                Objects.equals(code, role.code) &&
                Objects.equals(name, role.name) &&
                Objects.equals(createdAt, role.createdAt);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, code, name, createdAt);
    }
}